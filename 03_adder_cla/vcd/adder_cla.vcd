$date
	Mon Jul  8 10:56:03 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder_cla_tb $end
$var wire 32 ! S_o [31:0] $end
$var wire 1 " Cout_o $end
$var reg 32 # A_i [31:0] $end
$var reg 32 $ B_i [31:0] $end
$var reg 1 % Cin $end
$var reg 1 & err $end
$var reg 128 ' taskState [127:0] $end
$var reg 256 ( vcd_file [255:0] $end
$var integer 32 ) i [31:0] $end
$scope module u_adder_cla $end
$var wire 32 * A_i [31:0] $end
$var wire 32 + B_i [31:0] $end
$var wire 1 % Cin $end
$var wire 32 , S_o [31:0] $end
$var wire 8 - carry [7:0] $end
$var wire 1 " Cout_o $end
$scope module u_CLA_4bit_0 $end
$var wire 1 . C_in $end
$var wire 4 / a [3:0] $end
$var wire 4 0 b [3:0] $end
$var wire 4 1 s [3:0] $end
$var wire 4 2 P [3:0] $end
$var wire 4 3 G [3:0] $end
$var wire 1 4 Cout $end
$var wire 4 5 C [3:0] $end
$scope module u_CLA $end
$var wire 1 . Cin $end
$var wire 1 4 Cout $end
$var wire 4 6 G [3:0] $end
$var wire 1 7 GG $end
$var wire 4 8 P [3:0] $end
$var wire 1 9 PG $end
$var wire 4 : C [3:0] $end
$upscope $end
$scope module u_FA_0 $end
$var wire 1 . Cin $end
$var wire 1 ; G $end
$var wire 1 < P $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? sum $end
$upscope $end
$scope module u_FA_1 $end
$var wire 1 @ Cin $end
$var wire 1 A G $end
$var wire 1 B P $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E sum $end
$upscope $end
$scope module u_FA_2 $end
$var wire 1 F Cin $end
$var wire 1 G G $end
$var wire 1 H P $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K sum $end
$upscope $end
$scope module u_FA_3 $end
$var wire 1 L Cin $end
$var wire 1 M G $end
$var wire 1 N P $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 Q sum $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_1 $end
$var wire 1 R C_in $end
$var wire 4 S a [3:0] $end
$var wire 4 T b [3:0] $end
$var wire 4 U s [3:0] $end
$var wire 4 V P [3:0] $end
$var wire 4 W G [3:0] $end
$var wire 1 X Cout $end
$var wire 4 Y C [3:0] $end
$scope module u_CLA $end
$var wire 1 R Cin $end
$var wire 1 X Cout $end
$var wire 4 Z G [3:0] $end
$var wire 1 [ GG $end
$var wire 4 \ P [3:0] $end
$var wire 1 ] PG $end
$var wire 4 ^ C [3:0] $end
$upscope $end
$scope module u_FA_0 $end
$var wire 1 R Cin $end
$var wire 1 _ G $end
$var wire 1 ` P $end
$var wire 1 a a $end
$var wire 1 b b $end
$var wire 1 c sum $end
$upscope $end
$scope module u_FA_1 $end
$var wire 1 d Cin $end
$var wire 1 e G $end
$var wire 1 f P $end
$var wire 1 g a $end
$var wire 1 h b $end
$var wire 1 i sum $end
$upscope $end
$scope module u_FA_2 $end
$var wire 1 j Cin $end
$var wire 1 k G $end
$var wire 1 l P $end
$var wire 1 m a $end
$var wire 1 n b $end
$var wire 1 o sum $end
$upscope $end
$scope module u_FA_3 $end
$var wire 1 p Cin $end
$var wire 1 q G $end
$var wire 1 r P $end
$var wire 1 s a $end
$var wire 1 t b $end
$var wire 1 u sum $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_2 $end
$var wire 1 v C_in $end
$var wire 4 w a [3:0] $end
$var wire 4 x b [3:0] $end
$var wire 4 y s [3:0] $end
$var wire 4 z P [3:0] $end
$var wire 4 { G [3:0] $end
$var wire 1 | Cout $end
$var wire 4 } C [3:0] $end
$scope module u_CLA $end
$var wire 1 v Cin $end
$var wire 1 | Cout $end
$var wire 4 ~ G [3:0] $end
$var wire 1 !" GG $end
$var wire 4 "" P [3:0] $end
$var wire 1 #" PG $end
$var wire 4 $" C [3:0] $end
$upscope $end
$scope module u_FA_0 $end
$var wire 1 v Cin $end
$var wire 1 %" G $end
$var wire 1 &" P $end
$var wire 1 '" a $end
$var wire 1 (" b $end
$var wire 1 )" sum $end
$upscope $end
$scope module u_FA_1 $end
$var wire 1 *" Cin $end
$var wire 1 +" G $end
$var wire 1 ," P $end
$var wire 1 -" a $end
$var wire 1 ." b $end
$var wire 1 /" sum $end
$upscope $end
$scope module u_FA_2 $end
$var wire 1 0" Cin $end
$var wire 1 1" G $end
$var wire 1 2" P $end
$var wire 1 3" a $end
$var wire 1 4" b $end
$var wire 1 5" sum $end
$upscope $end
$scope module u_FA_3 $end
$var wire 1 6" Cin $end
$var wire 1 7" G $end
$var wire 1 8" P $end
$var wire 1 9" a $end
$var wire 1 :" b $end
$var wire 1 ;" sum $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_3 $end
$var wire 1 <" C_in $end
$var wire 4 =" a [3:0] $end
$var wire 4 >" b [3:0] $end
$var wire 4 ?" s [3:0] $end
$var wire 4 @" P [3:0] $end
$var wire 4 A" G [3:0] $end
$var wire 1 B" Cout $end
$var wire 4 C" C [3:0] $end
$scope module u_CLA $end
$var wire 1 <" Cin $end
$var wire 1 B" Cout $end
$var wire 4 D" G [3:0] $end
$var wire 1 E" GG $end
$var wire 4 F" P [3:0] $end
$var wire 1 G" PG $end
$var wire 4 H" C [3:0] $end
$upscope $end
$scope module u_FA_0 $end
$var wire 1 <" Cin $end
$var wire 1 I" G $end
$var wire 1 J" P $end
$var wire 1 K" a $end
$var wire 1 L" b $end
$var wire 1 M" sum $end
$upscope $end
$scope module u_FA_1 $end
$var wire 1 N" Cin $end
$var wire 1 O" G $end
$var wire 1 P" P $end
$var wire 1 Q" a $end
$var wire 1 R" b $end
$var wire 1 S" sum $end
$upscope $end
$scope module u_FA_2 $end
$var wire 1 T" Cin $end
$var wire 1 U" G $end
$var wire 1 V" P $end
$var wire 1 W" a $end
$var wire 1 X" b $end
$var wire 1 Y" sum $end
$upscope $end
$scope module u_FA_3 $end
$var wire 1 Z" Cin $end
$var wire 1 [" G $end
$var wire 1 \" P $end
$var wire 1 ]" a $end
$var wire 1 ^" b $end
$var wire 1 _" sum $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_4 $end
$var wire 1 `" C_in $end
$var wire 4 a" a [3:0] $end
$var wire 4 b" b [3:0] $end
$var wire 4 c" s [3:0] $end
$var wire 4 d" P [3:0] $end
$var wire 4 e" G [3:0] $end
$var wire 1 f" Cout $end
$var wire 4 g" C [3:0] $end
$scope module u_CLA $end
$var wire 1 `" Cin $end
$var wire 1 f" Cout $end
$var wire 4 h" G [3:0] $end
$var wire 1 i" GG $end
$var wire 4 j" P [3:0] $end
$var wire 1 k" PG $end
$var wire 4 l" C [3:0] $end
$upscope $end
$scope module u_FA_0 $end
$var wire 1 `" Cin $end
$var wire 1 m" G $end
$var wire 1 n" P $end
$var wire 1 o" a $end
$var wire 1 p" b $end
$var wire 1 q" sum $end
$upscope $end
$scope module u_FA_1 $end
$var wire 1 r" Cin $end
$var wire 1 s" G $end
$var wire 1 t" P $end
$var wire 1 u" a $end
$var wire 1 v" b $end
$var wire 1 w" sum $end
$upscope $end
$scope module u_FA_2 $end
$var wire 1 x" Cin $end
$var wire 1 y" G $end
$var wire 1 z" P $end
$var wire 1 {" a $end
$var wire 1 |" b $end
$var wire 1 }" sum $end
$upscope $end
$scope module u_FA_3 $end
$var wire 1 ~" Cin $end
$var wire 1 !# G $end
$var wire 1 "# P $end
$var wire 1 ## a $end
$var wire 1 $# b $end
$var wire 1 %# sum $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_5 $end
$var wire 1 &# C_in $end
$var wire 4 '# a [3:0] $end
$var wire 4 (# b [3:0] $end
$var wire 4 )# s [3:0] $end
$var wire 4 *# P [3:0] $end
$var wire 4 +# G [3:0] $end
$var wire 1 ,# Cout $end
$var wire 4 -# C [3:0] $end
$scope module u_CLA $end
$var wire 1 &# Cin $end
$var wire 1 ,# Cout $end
$var wire 4 .# G [3:0] $end
$var wire 1 /# GG $end
$var wire 4 0# P [3:0] $end
$var wire 1 1# PG $end
$var wire 4 2# C [3:0] $end
$upscope $end
$scope module u_FA_0 $end
$var wire 1 &# Cin $end
$var wire 1 3# G $end
$var wire 1 4# P $end
$var wire 1 5# a $end
$var wire 1 6# b $end
$var wire 1 7# sum $end
$upscope $end
$scope module u_FA_1 $end
$var wire 1 8# Cin $end
$var wire 1 9# G $end
$var wire 1 :# P $end
$var wire 1 ;# a $end
$var wire 1 <# b $end
$var wire 1 =# sum $end
$upscope $end
$scope module u_FA_2 $end
$var wire 1 ># Cin $end
$var wire 1 ?# G $end
$var wire 1 @# P $end
$var wire 1 A# a $end
$var wire 1 B# b $end
$var wire 1 C# sum $end
$upscope $end
$scope module u_FA_3 $end
$var wire 1 D# Cin $end
$var wire 1 E# G $end
$var wire 1 F# P $end
$var wire 1 G# a $end
$var wire 1 H# b $end
$var wire 1 I# sum $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_6 $end
$var wire 1 J# C_in $end
$var wire 4 K# a [3:0] $end
$var wire 4 L# b [3:0] $end
$var wire 4 M# s [3:0] $end
$var wire 4 N# P [3:0] $end
$var wire 4 O# G [3:0] $end
$var wire 1 P# Cout $end
$var wire 4 Q# C [3:0] $end
$scope module u_CLA $end
$var wire 1 J# Cin $end
$var wire 1 P# Cout $end
$var wire 4 R# G [3:0] $end
$var wire 1 S# GG $end
$var wire 4 T# P [3:0] $end
$var wire 1 U# PG $end
$var wire 4 V# C [3:0] $end
$upscope $end
$scope module u_FA_0 $end
$var wire 1 J# Cin $end
$var wire 1 W# G $end
$var wire 1 X# P $end
$var wire 1 Y# a $end
$var wire 1 Z# b $end
$var wire 1 [# sum $end
$upscope $end
$scope module u_FA_1 $end
$var wire 1 \# Cin $end
$var wire 1 ]# G $end
$var wire 1 ^# P $end
$var wire 1 _# a $end
$var wire 1 `# b $end
$var wire 1 a# sum $end
$upscope $end
$scope module u_FA_2 $end
$var wire 1 b# Cin $end
$var wire 1 c# G $end
$var wire 1 d# P $end
$var wire 1 e# a $end
$var wire 1 f# b $end
$var wire 1 g# sum $end
$upscope $end
$scope module u_FA_3 $end
$var wire 1 h# Cin $end
$var wire 1 i# G $end
$var wire 1 j# P $end
$var wire 1 k# a $end
$var wire 1 l# b $end
$var wire 1 m# sum $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_7 $end
$var wire 1 n# C_in $end
$var wire 4 o# a [3:0] $end
$var wire 4 p# b [3:0] $end
$var wire 4 q# s [3:0] $end
$var wire 4 r# P [3:0] $end
$var wire 4 s# G [3:0] $end
$var wire 1 " Cout $end
$var wire 4 t# C [3:0] $end
$scope module u_CLA $end
$var wire 1 n# Cin $end
$var wire 1 " Cout $end
$var wire 4 u# G [3:0] $end
$var wire 1 v# GG $end
$var wire 4 w# P [3:0] $end
$var wire 1 x# PG $end
$var wire 4 y# C [3:0] $end
$upscope $end
$scope module u_FA_0 $end
$var wire 1 n# Cin $end
$var wire 1 z# G $end
$var wire 1 {# P $end
$var wire 1 |# a $end
$var wire 1 }# b $end
$var wire 1 ~# sum $end
$upscope $end
$scope module u_FA_1 $end
$var wire 1 !$ Cin $end
$var wire 1 "$ G $end
$var wire 1 #$ P $end
$var wire 1 $$ a $end
$var wire 1 %$ b $end
$var wire 1 &$ sum $end
$upscope $end
$scope module u_FA_2 $end
$var wire 1 '$ Cin $end
$var wire 1 ($ G $end
$var wire 1 )$ P $end
$var wire 1 *$ a $end
$var wire 1 +$ b $end
$var wire 1 ,$ sum $end
$upscope $end
$scope module u_FA_3 $end
$var wire 1 -$ Cin $end
$var wire 1 .$ G $end
$var wire 1 /$ P $end
$var wire 1 0$ a $end
$var wire 1 1$ b $end
$var wire 1 2$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope task init $end
$upscope $end
$scope task vecInsert $end
$var reg 4 3$ i [3:0] $end
$upscope $end
$scope task vecVerify $end
$var reg 4 4$ i [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 4$
b0 3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
bx y#
xx#
bx w#
xv#
bx u#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
zn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
bx V#
xU#
bx T#
xS#
bx R#
bx Q#
xP#
bx O#
bx N#
bx M#
bx L#
bx K#
zJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
bx 2#
x1#
bx 0#
x/#
bx .#
bx -#
x,#
bx +#
bx *#
bx )#
bx (#
bx '#
z&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
bx l"
xk"
bx j"
xi"
bx h"
bx g"
xf"
bx e"
bx d"
bx c"
bx b"
bx a"
z`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
bx H"
xG"
bx F"
xE"
bx D"
bx C"
xB"
bx A"
bx @"
bx ?"
bx >"
bx ="
z<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
bx $"
x#"
bx ""
x!"
bx ~
bx }
x|
bx {
bx z
bx y
bx x
bx w
zv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
bx ^
x]
bx \
x[
bx Z
bx Y
xX
bx W
bx V
bx U
bx T
bx S
zR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
bx :
x9
bx 8
x7
bx 6
bx 5
x4
bx 3
bx 2
bx 1
bx 0
bx /
x.
bzxxxxxxx -
bzxxxx ,
bx +
bx *
b0 )
b101110001011110111011001100011011001000010111101100001011001000110010001100101011100100101111101100011011011000110000100101110011101100110001101100100 (
b101011001000101010000110101101100100000001000000011000001011101 '
0&
x%
bx $
bx #
x"
bzxxxx !
$end
#10
b1 4$
b101011001000101010000110101101100100000001000000011000101011101 '
b1 3$
b1 )
#20
b10 4$
b101011001000101010000110101101100100000001000000011001001011101 '
b10 3$
b10 )
#30
b11 4$
b101011001000101010000110101101100100000001000000011001101011101 '
b11 3$
b11 )
#40
b100 4$
b101011001000101010000110101101100100000001000000011010001011101 '
b100 3$
b100 )
#50
b101 4$
b101011001000101010000110101101100100000001000000011010101011101 '
b101 3$
b101 )
#60
b110 4$
b101011001000101010000110101101100100000001000000011011001011101 '
b110 3$
b110 )
#70
b111 4$
b101011001000101010000110101101100100000001000000011011101011101 '
b111 3$
b111 )
#80
b1000 4$
b101011001000101010000110101101100100000001000000011100001011101 '
b1000 3$
b1000 )
#90
b1001 4$
b101011001000101010000110101101100100000001000000011100101011101 '
b1001 3$
b1001 )
#100
b1010 )
#110
